// <auto-generated />
using System;
using CentreT_TelegramBot.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CentreT_TelegramBot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20220320173520_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CentreT_TelegramBot.Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Id")
                        .IsUnique();

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("CentreT_TelegramBot.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CentreT_TelegramBot.Entities.UserContext", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserContexts");
                });

            modelBuilder.Entity("CentreT_TelegramBot.Entities.UserJoinContext", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("ChatName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pronouns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChatName")
                        .IsUnique()
                        .HasFilter("[ChatName] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.HasIndex("Id", "UserId")
                        .IsUnique();

                    b.ToTable("UserJoinContexts");
                });

            modelBuilder.Entity("CentreT_TelegramBot.Entities.UserContext", b =>
                {
                    b.HasOne("CentreT_TelegramBot.Entities.User", "User")
                        .WithOne("UserContext")
                        .HasForeignKey("CentreT_TelegramBot.Entities.UserContext", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CentreT_TelegramBot.Entities.UserJoinContext", b =>
                {
                    b.HasOne("CentreT_TelegramBot.Entities.Chat", "Chat")
                        .WithOne()
                        .HasForeignKey("CentreT_TelegramBot.Entities.UserJoinContext", "ChatName")
                        .HasPrincipalKey("CentreT_TelegramBot.Entities.Chat", "Name");

                    b.HasOne("CentreT_TelegramBot.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CentreT_TelegramBot.Entities.User", b =>
                {
                    b.Navigation("UserContext")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
